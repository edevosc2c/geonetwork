name: CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - name: "Checking out"
      uses: actions/checkout@v2.4.0
      with:
        submodules: 'recursive'

    - name: Setting up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: "Configuring Maven"
      run: |
          mkdir -p $HOME/.m2
          cp .github/resources/m2-settings.xml $HOME/.m2/settings.xml

    - name: "Installing"
      run: mvn clean install -DskipTests

    - name: Getting image tag
      if: github.repository == 'georchestra/geonetwork'
      id: version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

    - name: "Building docker image"
      if: github.repository == 'georchestra/geonetwork'
      working-directory: web/
      run: mvn clean package docker:build -Pdocker,log4j-logstash,sentry-log4j -DdockerImageName=georchestra/geonetwork:${{ steps.version.outputs.VERSION }} -DskipTests

    - name: "Logging in docker.io"
      if: github.repository == 'georchestra/geonetwork'
      uses: azure/docker-login@v1
      with:
        username: '${{ secrets.DOCKER_HUB_USERNAME }}'
        password: '${{ secrets.DOCKER_HUB_PASSWORD }}'

    - name: "Pushing latest to docker.io"
      if: contains(github.ref, 'georchestra-gn3.8.2') && github.repository == 'georchestra/geonetwork'
      run: |
        docker tag georchestra/geonetwork:${{ steps.version.outputs.VERSION }} georchestra/geonetwork:latest
        docker push georchestra/geonetwork:latest

    - name: "Pushing release tag to docker.io"
      if: contains(github.ref, 'refs/tags/20.') && github.repository == 'georchestra/geonetwork'
      run: |
        docker push georchestra/geonetwork:${{ steps.version.outputs.VERSION }}
