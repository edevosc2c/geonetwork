name: Linux GitHub CI

on:
  pull_request:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Set up JDK
      uses: actions/setup-java@v3.10.0
      with:
        java-version: 8

    - name: Maven repository caching
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn -B -V install -DskipTests=true -Dmaven.javadoc.skip=true

    # geOrchestra specific
    - name: Build a docker image
      run: mvn -B -V package docker:build -Pdocker -pl web -DskipTests -DdockerImageName=georchestra/geonetwork:4.x-dev

    - name: publish the artifact
      if: github.repository == 'georchestra/geonetwork' && github.ref == 'refs/heads/georchestra-gn4-4.x-dev'
      uses: actions/upload-artifact@v1
      with:
        name: geonetwork.war
        path: web/target/geonetwork.war

    - uses: docker/login-action@v1
      if: github.repository == 'georchestra/geonetwork' && github.ref == 'refs/heads/georchestra-gn4-4.x-dev'
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Publish the docker image
      if: github.repository == 'georchestra/geonetwork' && github.ref == 'refs/heads/georchestra-gn4-4.x-dev'
      run: |
        docker push georchestra/geonetwork:4.x-dev

    - name: Remove SNAPSHOT jars from repository
      run: |
        find ~/.m2/repository -name "*SNAPSHOT*" -type d | xargs rm -rf {}
    - name: Remove Schema 3.8 jars from repository
      run: |
        find ~/.m2/repository -name "*3.8*" -type d | xargs rm -rf {}
